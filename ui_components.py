import streamlit as st
import plotly.graph_objects as go
from datetime import datetime, timedelta, date
import calendar
from utils import get_aqi_level

def display_realtime_pm(df):
    """Displays the current PM2.5 value and advice."""
    latest_pm25 = df['PM2.5'][0]
    level, color, emoji, advice = get_aqi_level(latest_pm25)

    col1, col2 = st.columns([1, 2])

    with col1:
        st.subheader("‡∏Ñ‡πà‡∏≤ PM2.5 ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
        st.markdown(
            f"""
            <div style="background-color: {color}; padding: 20px; border-radius: 10px; text-align: center;">
                <h1 style="color: {'black' if color == '#FFFF00' else 'white'}; font-size: 4rem; margin: 0;">{latest_pm25:.1f}</h1>
                <p style="color: {'black' if color == '#FFFF00' else 'white'}; font-size: 1.5rem; margin: 0;">Œºg/m¬≥</p>
                <h2 style="color: {'black' if color == '#FFFF00' else 'white'}; margin-top: 10px;">{level} {emoji}</h2>
            </div>
            """,
            unsafe_allow_html=True
        )

    with col2:
        st.subheader("‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏±‡∏ß")
        st.info(advice)
        with st.expander("‚ÑπÔ∏è ‡∏î‡∏π‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®"):
            st.markdown("""
                <style>
                    .legend-dot {{ height: 15px; width: 15px; border-radius: 50%; display: inline-block; margin-right: 8px; vertical-align: middle; }}
                    .legend-item {{ font-size: 1.1rem; margin-bottom: 8px; }}
                </style>
                <div class="legend-item"><span class="legend-dot" style="background-color: #0099FF;"></span><b>‡∏î‡∏µ‡∏°‡∏≤‡∏Å:</b> 0 - 15.0 Œºg/m¬≥</div>
                <div class="legend-item"><span class="legend-dot" style="background-color: #00CC00;"></span><b>‡∏î‡∏µ:</b> 15.1 - 25.0 Œºg/m¬≥</div>
                <div class="legend-item" style="color: black;"><span class="legend-dot" style="background-color: #FFFF00;"></span><b>‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á:</b> 25.1 - 37.5 Œºg/m¬≥</div>
                <div class="legend-item"><span class="legend-dot" style="background-color: #FF9900;"></span><b>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:</b> 37.6 - 75.0 Œºg/m¬≥</div>
                <div class="legend-item"><span class="legend-dot" style="background-color: #FF0000;"></span><b>‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:</b> > 75.0 Œºg/m¬≥</div>
            """, unsafe_allow_html=True)

def display_24hr_chart(df):
    """Displays the 24-hour PM2.5 trend chart."""
    st.subheader("‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ñ‡πà‡∏≤ PM2.5 ‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")

    last_24_hours_data = df[df['Datetime'] >= (df['Datetime'].max() - timedelta(hours=24))]
    last_24_hours_data = last_24_hours_data.sort_values(by="Datetime", ascending=True)

    fig_24hr = go.Figure()
    fig_24hr.add_trace(go.Scatter(x=last_24_hours_data['Datetime'], y=last_24_hours_data['PM2.5'], mode='lines+markers', name='PM2.5', line=dict(color='#1f77b4', width=3), marker=dict(size=5)))
    fig_24hr.add_hrect(y0=0, y1=15, line_width=0, fillcolor="#0099FF", opacity=0.1, annotation_text="‡∏î‡∏µ‡∏°‡∏≤‡∏Å", annotation_position="right")
    fig_24hr.add_hrect(y0=15, y1=25, line_width=0, fillcolor="#00CC00", opacity=0.1, annotation_text="‡∏î‡∏µ", annotation_position="right")
    fig_24hr.add_hrect(y0=25, y1=37.5, line_width=0, fillcolor="#FFFF00", opacity=0.1, annotation_text="‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á", annotation_position="right")
    fig_24hr.add_hrect(y0=37.5, y1=75, line_width=0, fillcolor="#FF9900", opacity=0.1, annotation_text="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö", annotation_position="right")
    fig_24hr.add_hrect(y0=75, y1=max(100, last_24_hours_data['PM2.5'].max() * 1.1), line_width=0, fillcolor="#FF0000", opacity=0.1, annotation_text="‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö", annotation_position="right")
    fig_24hr.update_layout(xaxis_title="‡πÄ‡∏ß‡∏•‡∏≤", yaxis_title="PM2.5 (Œºg/m¬≥)", plot_bgcolor='rgba(0,0,0,0)', hovermode="x unified", margin=dict(l=20, r=20, t=20, b=20))
    st.plotly_chart(fig_24hr, use_container_width=True)

def display_monthly_calendar(df):
    """Displays the monthly PM2.5 calendar heatmap."""
    # This function is kept as a placeholder. The original code for the calendar
    # was incomplete and needs further development to function correctly.
    st.warning("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤")
    # Placeholder for the complex calendar logic from the original file
    pass

def display_historical_data(df):
    """Displays the historical data section with a date selector."""
    st.subheader("üìä ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á")

    today = date.today()
    default_start = today - timedelta(days=7)
    col_date1, col_date2 = st.columns(2)
    with col_date1:
        start_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô", value=default_start, min_value=df['Datetime'].min().date(), max_value=today)
    with col_date2:
        end_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î", value=today, min_value=df['Datetime'].min().date(), max_value=today)

    if start_date > end_date:
        st.error("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î")
    else:
        mask = (df['Datetime'].dt.date >= start_date) & (df['Datetime'].dt.date <= end_date)
        filtered_df = df.loc[mask].sort_values(by="Datetime", ascending=True)

        if filtered_df.empty:
            st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
        else:
            avg_pm = filtered_df['PM2.5'].mean()
            max_pm = filtered_df['PM2.5'].max()
            min_pm = filtered_df['PM2.5'].min()

            mcol1, mcol2, mcol3 = st.columns(3)
            mcol1.metric("‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢", f"{avg_pm:.1f} Œºg/m¬≥")
            mcol2.metric("‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î", f"{max_pm:.1f} Œºg/m¬≥")
            mcol3.metric("‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î", f"{min_pm:.1f} Œºg/m¬≥")

            fig_hist = go.Figure()
            fig_hist.add_trace(go.Scatter(x=filtered_df['Datetime'], y=filtered_df['PM2.5'], mode='lines', name='PM2.5'))
            fig_hist.update_layout(title=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PM2.5 ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà {start_date.strftime('%d/%m/%Y')} ‡∏ñ‡∏∂‡∏á {end_date.strftime('%d/%m/%Y')}",
                                   xaxis_title="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà", yaxis_title="PM2.5 (Œºg/m¬≥)")
            st.plotly_chart(fig_hist, use_container_width=True)

def display_knowledge_tabs():
    """Displays the knowledge base section in tabs."""
    st.subheader("üí° ‡πÄ‡∏Å‡∏£‡πá‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö PM2.5")

    tab1, tab2, tab3, tab4 = st.tabs(["PM2.5 ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?", "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ú‡∏¥‡∏î", "DIY ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ù‡∏∏‡πà‡∏ô", "‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å"])

    with tab1:
        st.markdown("""
        **PM2.5 (Particulate Matter 2.5)** ‡∏Ñ‡∏∑‡∏≠‡∏ù‡∏∏‡πà‡∏ô‡∏•‡∏∞‡∏≠‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2.5 ‡πÑ‡∏°‡∏Ñ‡∏£‡∏≠‡∏ô ‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ú‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 25 ‡πÄ‡∏ó‡πà‡∏≤ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏ô‡∏à‡∏°‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏£‡∏Å‡∏ã‡∏∂‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏Å‡∏£‡∏∞‡πÅ‡∏™‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
        - **‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î:** ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡πÑ‡∏´‡∏°‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥ (‡πÑ‡∏ü‡∏õ‡πà‡∏≤) ‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå (‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏≤‡∏à‡∏£, ‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°, ‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏•‡πà‡∏á)
        - **‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:** ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏ö‡∏ï‡∏≤, ‡πÅ‡∏™‡∏ö‡∏à‡∏°‡∏π‡∏Å, ‡πÑ‡∏≠, ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡∏´‡∏≠‡∏ö‡∏´‡∏∑‡∏î, ‡∏†‡∏π‡∏°‡∏¥‡πÅ‡∏û‡πâ, ‡πÅ‡∏•‡∏∞‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡∏õ‡∏≠‡∏î
        """)
    with tab2:
        st.markdown("""
        - **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠:** ‡∏ù‡∏ô‡∏ï‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏à‡∏∞‡∏î‡∏µ‡πÄ‡∏™‡∏°‡∏≠
          - **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á:** ‡∏ù‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏ù‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡∏ù‡∏∏‡πà‡∏ô‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ù‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ï‡∏Å‡πÑ‡∏°‡πà‡∏ô‡∏≤‡∏ô ‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏™‡∏π‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        - **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠:** ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô
          - **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á:** ‡∏ù‡∏∏‡πà‡∏ô PM2.5 ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πá‡∏î‡∏•‡∏≠‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏î‡πâ ‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÅ‡∏ú‡πà‡∏ô‡∏Å‡∏£‡∏≠‡∏á HEPA ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡∏ù‡∏∏‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
        - **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠:** ‡πÉ‡∏™‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏Å‡πá‡∏û‡∏≠
          - **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á:** ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏á‡∏ù‡∏∏‡πà‡∏ô PM2.5 ‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏û‡∏≠ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô N95 ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡πà‡∏≤ ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏ô‡∏∏‡∏†‡∏≤‡∏Ñ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
        """)
    with tab3:
        st.markdown("""
        - **‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏® DIY:** ‡πÉ‡∏ä‡πâ‡∏û‡∏±‡∏î‡∏•‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏ö‡∏Å‡∏±‡∏ö‡πÅ‡∏ú‡πà‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏® (‡πÄ‡∏ä‡πà‡∏ô HEPA filter) ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏î‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏ù‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î
        - **‡∏Å‡∏≤‡∏£‡∏ã‡∏µ‡∏•‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á:** ‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡∏µ‡∏•‡∏¢‡∏≤‡∏á‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏Ç‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ù‡∏∏‡πà‡∏ô‡πÄ‡∏•‡πá‡∏î‡∏•‡∏≠‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
        - **‡∏û‡∏±‡∏î‡∏•‡∏°‡∏î‡∏π‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏®:** ‡∏´‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏û‡∏±‡∏î‡∏•‡∏°‡∏î‡∏π‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô
        """)
    with tab4:
        st.markdown("""
        - **N95:** ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏™‡∏´‡∏£‡∏±‡∏ê‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏á‡∏ù‡∏∏‡πà‡∏ô‡∏•‡∏∞‡∏≠‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î 0.3 ‡πÑ‡∏°‡∏Ñ‡∏£‡∏≠‡∏ô‡πÑ‡∏î‡πâ 95%
        - **KN95:** ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏µ‡∏ô ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ö N95
        - **KF94:** ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ‡πÉ‡∏ï‡πâ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏á‡∏ù‡∏∏‡πà‡∏ô‡πÑ‡∏î‡πâ 94% ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
        - **‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢ (Surgical Mask):** ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô PM2.5 ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
        **‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏à‡∏≥:** ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
        """)
