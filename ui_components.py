import streamlit as st
import plotly.graph_objects as go
from datetime import datetime, timedelta, date
import calendar
from utils import get_aqi_level

def display_realtime_pm(df):
    """Displays the current PM2.5 value and advice with a modern UI."""
    latest_pm25 = df['PM2.5'][0]
    level, color_gradient, emoji, advice = get_aqi_level(latest_pm25)

    col1, col2 = st.columns([1, 2])

    with col1:
        st.subheader("‡∏Ñ‡πà‡∏≤ PM2.5 ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô")
        st.markdown(
            f"""
            <div style="background-image: {color_gradient}; padding: 25px; border-radius: 15px; text-align: center; color: white; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);">
                <h1 style="font-size: 4.5rem; margin: 0; text-shadow: 2px 2px 4px #000000;">{latest_pm25:.1f}</h1>
                <p style="font-size: 1.5rem; margin: 0;">Œºg/m¬≥</p>
                <h2 style="margin-top: 15px;">{level} {emoji}</h2>
            </div>
            """,
            unsafe_allow_html=True
        )

    with col2:
        st.subheader("‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏±‡∏ß")
        st.markdown(f"<div style='padding: 20px; border-radius: 15px; background-color: #f0f2f6; border: 1px solid #dfe6e9;'>{advice}</div>", unsafe_allow_html=True)
        with st.expander("‚ÑπÔ∏è ‡∏î‡∏π‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®"):
            st.markdown("""
                <style>
                    .legend-box {{ display: flex; align-items: center; font-size: 1.1rem; margin-bottom: 8px; }}
                    .legend-color {{ height: 20px; width: 20px; border-radius: 5px; margin-right: 10px; }}
                </style>
                <div class="legend-box"><div class="legend-color" style="background-image: linear-gradient(to right, #4facfe, #00f2fe);"></div><b>‡∏î‡∏µ‡∏°‡∏≤‡∏Å:</b> 0 - 15.0 Œºg/m¬≥</div>
                <div class="legend-box"><div class="legend-color" style="background-image: linear-gradient(to right, #6a11cb, #2575fc);"></div><b>‡∏î‡∏µ:</b> 15.1 - 25.0 Œºg/m¬≥</div>
                <div class="legend-box"><div class="legend-color" style="background-image: linear-gradient(to right, #f7971e, #ffd200);"></div><b>‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á:</b> 25.1 - 37.5 Œºg/m¬≥</div>
                <div class="legend-box"><div class="legend-color" style="background-image: linear-gradient(to right, #ff416c, #ff4b2b);"></div><b>‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:</b> 37.6 - 75.0 Œºg/m¬≥</div>
                <div class="legend-box"><div class="legend-color" style="background-image: linear-gradient(to right, #c31432, #240b36);"></div><b>‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:</b> > 75.0 Œºg/m¬≥</div>
            """, unsafe_allow_html=True)

def display_24hr_chart(df):
    """Displays the 24-hour PM2.5 trend chart with a modern look."""
    st.subheader("‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏Ñ‡πà‡∏≤ PM2.5 ‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")
    last_24_hours_data = df[df['Datetime'] >= (df['Datetime'].max() - timedelta(hours=24))].sort_values(by="Datetime", ascending=True)

    fig_24hr = go.Figure()
    fig_24hr.add_trace(go.Scatter(
        x=last_24_hours_data['Datetime'], 
        y=last_24_hours_data['PM2.5'], 
        mode='lines+markers', 
        name='PM2.5', 
        line=dict(color='#2575fc', width=3), 
        marker=dict(size=6, symbol='circle-open')
    ))
    fig_24hr.update_layout(
        xaxis_title="‡πÄ‡∏ß‡∏•‡∏≤", 
        yaxis_title="PM2.5 (Œºg/m¬≥)", 
        plot_bgcolor='rgba(0,0,0,0)', 
        hovermode="x unified",
        template="plotly_white",
        margin=dict(l=20, r=20, t=40, b=20),
        xaxis=dict(gridcolor='#e9e9e9'),
        yaxis=dict(gridcolor='#e9e9e9')
    )
    st.plotly_chart(fig_24hr, use_container_width=True)

def display_monthly_calendar(df):
    """Displays the monthly PM2.5 calendar heatmap."""
    st.warning("‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤")
    pass

def display_historical_data(df):
    """Displays the historical data section within a collapsible expander with a modern look."""
    with st.expander("üìä ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô)"):
        today = date.today()
        default_start = today - timedelta(days=7)
        
        col_date1, col_date2 = st.columns(2)
        with col_date1:
            start_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô", value=default_start, min_value=df['Datetime'].min().date(), max_value=today, key="start_date_hist")
        with col_date2:
            end_date = st.date_input("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î", value=today, min_value=df['Datetime'].min().date(), max_value=today, key="end_date_hist")

        if start_date > end_date:
            st.error("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î")
        else:
            mask = (df['Datetime'].dt.date >= start_date) & (df['Datetime'].dt.date <= end_date)
            filtered_df = df.loc[mask].sort_values(by="Datetime", ascending=True)

            if filtered_df.empty:
                st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
            else:
                avg_pm = filtered_df['PM2.5'].mean()
                max_pm = filtered_df['PM2.5'].max()
                min_pm = filtered_df['PM2.5'].min()

                mcol1, mcol2, mcol3 = st.columns(3)
                mcol1.metric("‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢", f"{avg_pm:.1f} Œºg/m¬≥")
                mcol2.metric("‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î", f"{max_pm:.1f} Œºg/m¬≥")
                mcol3.metric("‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î", f"{min_pm:.1f} Œºg/m¬≥")

                fig_hist = go.Figure()
                fig_hist.add_trace(go.Scatter(x=filtered_df['Datetime'], y=filtered_df['PM2.5'], mode='lines', name='PM2.5', line=dict(color='#2575fc')))
                fig_hist.update_layout(
                    title=f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PM2.5 ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà {start_date.strftime('%d/%m/%Y')} ‡∏ñ‡∏∂‡∏á {end_date.strftime('%d/%m/%Y')}",
                    xaxis_title="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà", 
                    yaxis_title="PM2.5 (Œºg/m¬≥)",
                    template="plotly_white"
                )
                st.plotly_chart(fig_hist, use_container_width=True)

def display_knowledge_tabs():
    """Displays the knowledge base section in tabs with improved formatting."""
    st.subheader("üí° ‡πÄ‡∏Å‡∏£‡πá‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö PM2.5")

    tab1, tab2, tab3, tab4 = st.tabs(["PM2.5 ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?", "‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ú‡∏¥‡∏î", "DIY ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ù‡∏∏‡πà‡∏ô", "‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å"])

    with tab1:
        st.markdown("""
        **PM2.5 (Particulate Matter 2.5)** ‡∏Ñ‡∏∑‡∏≠‡∏ù‡∏∏‡πà‡∏ô‡∏•‡∏∞‡∏≠‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 2.5 ‡πÑ‡∏°‡∏Ñ‡∏£‡∏≠‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ú‡∏°‡∏Ç‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 25 ‡πÄ‡∏ó‡πà‡∏≤ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡πÅ‡∏™‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
        
        - üî• **‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î:** ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡πÑ‡∏´‡∏°‡πâ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏≤‡∏à‡∏£, ‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô, ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ú‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏•‡πà‡∏á
        - ‚ù§Ô∏è **‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö:** ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡∏≠‡∏≤‡∏à‡∏Å‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏Ñ‡∏≤‡∏¢‡πÄ‡∏Ñ‡∏∑‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏£‡∏Ñ‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á
        """)
    with tab2:
        st.markdown("""
        - ‚ùå **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠:** ‡∏ù‡∏ô‡∏ï‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏à‡∏∞‡∏î‡∏µ‡πÄ‡∏™‡∏°‡∏≠
          - ‚úÖ **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á:** ‡∏ù‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏ä‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏ù‡∏∏‡πà‡∏ô‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Å‡∏≥‡πÄ‡∏ô‡∏¥‡∏î‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà ‡∏Ñ‡πà‡∏≤‡∏ù‡∏∏‡πà‡∏ô‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏™‡∏π‡∏á‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å
        - ‚ùå **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠:** ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÄ‡∏™‡∏°‡∏≠
          - ‚úÖ **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á:** ‡∏ù‡∏∏‡πà‡∏ô PM2.5 ‡πÄ‡∏•‡πá‡∏î‡∏•‡∏≠‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÑ‡∏î‡πâ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
        - ‚ùå **‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠:** ‡πÉ‡∏™‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢‡∏Å‡πá‡∏û‡∏≠
          - ‚úÖ **‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á:** ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢‡∏Å‡∏±‡∏ô PM2.5 ‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡∏î‡∏µ‡∏û‡∏≠ ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å N95 ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡πà‡∏≤
        """)
    with tab3:
        st.markdown("""
        - **üå¨Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏® DIY:** ‡πÉ‡∏ä‡πâ‡∏û‡∏±‡∏î‡∏•‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏ö‡∏Å‡∏±‡∏ö‡πÅ‡∏ú‡πà‡∏ô‡∏Å‡∏£‡∏≠‡∏á HEPA ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏î‡∏µ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å
        - **üö™ ‡∏Å‡∏≤‡∏£‡∏ã‡∏µ‡∏•‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á:** ‡πÉ‡∏ä‡πâ‡∏ã‡∏µ‡∏•‡∏¢‡∏≤‡∏á‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏Ç‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ù‡∏∏‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô
        - **üí® ‡∏û‡∏±‡∏î‡∏•‡∏°‡∏î‡∏π‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏®:** ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
        """)
    with tab4:
        st.markdown("""
        - **N95:** ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏™‡∏´‡∏£‡∏±‡∏ê‡∏≠‡πÄ‡∏°‡∏£‡∏¥‡∏Å‡∏≤ ‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏î‡πâ 95% (‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)
        - **KN95:** ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏à‡∏µ‡∏ô ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á N95
        - **KF94:** ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ‡πÉ‡∏ï‡πâ ‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏î‡πâ 94% ‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö
        - **‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏≠‡∏ô‡∏≤‡∏°‡∏±‡∏¢:** ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô PM2.5 ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
        
        > **‡∏™‡∏¥‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:** ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏ß‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡∏Å‡∏±‡∏ö‡πÉ‡∏ö‡∏´‡∏ô‡πâ‡∏≤
        """)

